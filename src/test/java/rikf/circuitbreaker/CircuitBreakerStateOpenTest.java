package rikf.circuitbreaker;

import org.joda.time.Period;
import org.junit.Test;
import rikf.clock.MockClock;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class CircuitBreakerStateOpenTest {

    @Test(expected = CircuitBreakerOpenException.class)
    public void testPreExecute_DoesNotAttemptCloseWhenTimeToRetryHasNotElapsed() throws Exception {
        CircuitBreakerStateOpen underTest = new CircuitBreakerStateOpen(new MockClock(), Period.seconds(999));

        final CircuitBreaker mockCircuitBreaker = mock(CircuitBreaker.class);
        underTest.preExecute(mockCircuitBreaker);
    }

    @Test
    public void testPreExecute_AttemptCloseWhenTimeToRetryHasElapsed() throws Exception {
        final MockClock clock = new MockClock();
        CircuitBreakerStateOpen underTest = new CircuitBreakerStateOpen(clock, Period.millis(999));
        final CircuitBreaker mockCircuitBreaker = mock(CircuitBreaker.class);
        clock.tick(Period.seconds(1));

        underTest.preExecute(mockCircuitBreaker);

        verify(mockCircuitBreaker).halfOpen();
    }

}
